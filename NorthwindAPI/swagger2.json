{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "NorthwindAPI"
  },
  "host": "localhost:57336",
  "schemes": [ "http" ],
  "consumes": [ ],
  "produces": [ ],
  "paths": {
    "/Northwind/v4/Categories": {
      "get": {
        "tags": [ "Categories" ],
        "summary": "Categories_Get",
        "description": "Returns the EntitySet Categories",
        "operationId": "Categories_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Category]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Categories" ],
        "summary": "Categories_Post",
        "description": "Post a new entity to EntitySet Categories",
        "operationId": "Categories_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Category",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Category" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Categories({CategoryID})": {
      "get": {
        "tags": [ "Categories" ],
        "summary": "Categories_Get",
        "description": "Returns the entity with the key from Categories",
        "operationId": "Categories_GetByCategoryid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "CategoryID",
            "in": "path",
            "description": "key: CategoryID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Category" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Categories" ],
        "summary": "Categories_Put",
        "description": "Replace entity in EntitySet Categories",
        "operationId": "Categories_PutByCategoryid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CategoryID",
            "in": "path",
            "description": "key: CategoryID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Category",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Categories" ],
        "summary": "Categories_Delete",
        "description": "Delete entity in EntitySet Categories",
        "operationId": "Categories_DeleteByCategoryid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CategoryID",
            "in": "path",
            "description": "key: CategoryID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Categories" ],
        "summary": "Categories_Patch",
        "description": "Update entity in EntitySet Categories",
        "operationId": "Categories_PatchByCategoryid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CategoryID",
            "in": "path",
            "description": "key: CategoryID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Category",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Category" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/CustomerDemographics": {
      "get": {
        "tags": [ "CustomerDemographics" ],
        "summary": "CustomerDemographics_Get",
        "description": "Returns the EntitySet CustomerDemographics",
        "operationId": "CustomerDemographics_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[CustomerDemographic]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "CustomerDemographics" ],
        "summary": "CustomerDemographics_Post",
        "description": "Post a new entity to EntitySet CustomerDemographics",
        "operationId": "CustomerDemographics_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "CustomerDemographic",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomerDemographic" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CustomerDemographic" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/CustomerDemographics('{CustomerTypeID}')": {
      "get": {
        "tags": [ "CustomerDemographics" ],
        "summary": "CustomerDemographics_Get",
        "description": "Returns the entity with the key from CustomerDemographics",
        "operationId": "CustomerDemographics_GetByCustomertypeid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "CustomerTypeID",
            "in": "path",
            "description": "key: CustomerTypeID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CustomerDemographic" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "CustomerDemographics" ],
        "summary": "CustomerDemographics_Put",
        "description": "Replace entity in EntitySet CustomerDemographics",
        "operationId": "CustomerDemographics_PutByCustomertypeid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CustomerTypeID",
            "in": "path",
            "description": "key: CustomerTypeID",
            "required": true,
            "type": "string"
          },
          {
            "name": "CustomerDemographic",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomerDemographic" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "CustomerDemographics" ],
        "summary": "CustomerDemographics_Delete",
        "description": "Delete entity in EntitySet CustomerDemographics",
        "operationId": "CustomerDemographics_DeleteByCustomertypeid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CustomerTypeID",
            "in": "path",
            "description": "key: CustomerTypeID",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "CustomerDemographics" ],
        "summary": "CustomerDemographics_Patch",
        "description": "Update entity in EntitySet CustomerDemographics",
        "operationId": "CustomerDemographics_PatchByCustomertypeid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CustomerTypeID",
            "in": "path",
            "description": "key: CustomerTypeID",
            "required": true,
            "type": "string"
          },
          {
            "name": "CustomerDemographic",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomerDemographic" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Customers": {
      "get": {
        "tags": [ "Customers" ],
        "summary": "Customers_Get",
        "description": "Returns the EntitySet Customers",
        "operationId": "Customers_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Customer]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Customers" ],
        "summary": "Customers_Post",
        "description": "Post a new entity to EntitySet Customers",
        "operationId": "Customers_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Customer",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Customer" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Customer" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Customers('{CustomerID}')": {
      "get": {
        "tags": [ "Customers" ],
        "summary": "Customers_Get",
        "description": "Returns the entity with the key from Customers",
        "operationId": "Customers_GetByCustomerid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "key: CustomerID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Customer" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Customers" ],
        "summary": "Customers_Put",
        "description": "Replace entity in EntitySet Customers",
        "operationId": "Customers_PutByCustomerid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "key: CustomerID",
            "required": true,
            "type": "string"
          },
          {
            "name": "Customer",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Customer" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Customers" ],
        "summary": "Customers_Delete",
        "description": "Delete entity in EntitySet Customers",
        "operationId": "Customers_DeleteByCustomerid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "key: CustomerID",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Customers" ],
        "summary": "Customers_Patch",
        "description": "Update entity in EntitySet Customers",
        "operationId": "Customers_PatchByCustomerid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "CustomerID",
            "in": "path",
            "description": "key: CustomerID",
            "required": true,
            "type": "string"
          },
          {
            "name": "Customer",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Customer" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Employees": {
      "get": {
        "tags": [ "Employees" ],
        "summary": "Employees_Get",
        "description": "Returns the EntitySet Employees",
        "operationId": "Employees_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Employee]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Employees" ],
        "summary": "Employees_Post",
        "description": "Post a new entity to EntitySet Employees",
        "operationId": "Employees_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Employee",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Employee" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Employee" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Employees({EmployeeID})": {
      "get": {
        "tags": [ "Employees" ],
        "summary": "Employees_Get",
        "description": "Returns the entity with the key from Employees",
        "operationId": "Employees_GetByEmployeeid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "EmployeeID",
            "in": "path",
            "description": "key: EmployeeID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Employee" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Employees" ],
        "summary": "Employees_Put",
        "description": "Replace entity in EntitySet Employees",
        "operationId": "Employees_PutByEmployeeid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "EmployeeID",
            "in": "path",
            "description": "key: EmployeeID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Employee",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Employee" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Employees" ],
        "summary": "Employees_Delete",
        "description": "Delete entity in EntitySet Employees",
        "operationId": "Employees_DeleteByEmployeeid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "EmployeeID",
            "in": "path",
            "description": "key: EmployeeID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Employees" ],
        "summary": "Employees_Patch",
        "description": "Update entity in EntitySet Employees",
        "operationId": "Employees_PatchByEmployeeid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "EmployeeID",
            "in": "path",
            "description": "key: EmployeeID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Employee",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Employee" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Order_Details": {
      "get": {
        "tags": [ "Order_Details" ],
        "summary": "Order_Details_Get",
        "description": "Returns the EntitySet Order_Details",
        "operationId": "Order_Details_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Order_Detail]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Order_Details" ],
        "summary": "Order_Details_Post",
        "description": "Post a new entity to EntitySet Order_Details",
        "operationId": "Order_Details_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Order_Detail",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Order_Detail" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Order_Detail" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Order_Details(OrderID={OrderID}, ProductID={ProductID})": {
      "get": {
        "tags": [ "Order_Details" ],
        "summary": "Order_Details_Get",
        "description": "Returns the entity with the key from Order_Details",
        "operationId": "Order_Details_GetByOrderidAndProductid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Order_Detail" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Order_Details" ],
        "summary": "Order_Details_Put",
        "description": "Replace entity in EntitySet Order_Details",
        "operationId": "Order_Details_PutByOrderidAndProductid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Order_Detail",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Order_Detail" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Order_Details" ],
        "summary": "Order_Details_Delete",
        "description": "Delete entity in EntitySet Order_Details",
        "operationId": "Order_Details_DeleteByOrderidAndProductid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Order_Details" ],
        "summary": "Order_Details_Patch",
        "description": "Update entity in EntitySet Order_Details",
        "operationId": "Order_Details_PatchByOrderidAndProductid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Order_Detail",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Order_Detail" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Orders": {
      "get": {
        "tags": [ "Orders" ],
        "summary": "Orders_Get",
        "description": "Returns the EntitySet Orders",
        "operationId": "Orders_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Order]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Orders" ],
        "summary": "Orders_Post",
        "description": "Post a new entity to EntitySet Orders",
        "operationId": "Orders_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Order",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Order" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Order" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Orders({OrderID})": {
      "get": {
        "tags": [ "Orders" ],
        "summary": "Orders_Get",
        "description": "Returns the entity with the key from Orders",
        "operationId": "Orders_GetByOrderid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Order" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Orders" ],
        "summary": "Orders_Put",
        "description": "Replace entity in EntitySet Orders",
        "operationId": "Orders_PutByOrderid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Order",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Order" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Orders" ],
        "summary": "Orders_Delete",
        "description": "Delete entity in EntitySet Orders",
        "operationId": "Orders_DeleteByOrderid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Orders" ],
        "summary": "Orders_Patch",
        "description": "Update entity in EntitySet Orders",
        "operationId": "Orders_PatchByOrderid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "OrderID",
            "in": "path",
            "description": "key: OrderID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Order",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Order" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Products": {
      "get": {
        "tags": [ "Products" ],
        "summary": "Products_Get",
        "description": "Returns the EntitySet Products",
        "operationId": "Products_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Product]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Products" ],
        "summary": "Products_Post",
        "description": "Post a new entity to EntitySet Products",
        "operationId": "Products_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Product",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Product" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Products({ProductID})": {
      "get": {
        "tags": [ "Products" ],
        "summary": "Products_Get",
        "description": "Returns the entity with the key from Products",
        "operationId": "Products_GetByProductid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Product" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Products" ],
        "summary": "Products_Put",
        "description": "Replace entity in EntitySet Products",
        "operationId": "Products_PutByProductid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Product",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Products" ],
        "summary": "Products_Delete",
        "description": "Delete entity in EntitySet Products",
        "operationId": "Products_DeleteByProductid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Products" ],
        "summary": "Products_Patch",
        "description": "Update entity in EntitySet Products",
        "operationId": "Products_PatchByProductid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "ProductID",
            "in": "path",
            "description": "key: ProductID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Product",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Product" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Regions": {
      "get": {
        "tags": [ "Regions" ],
        "summary": "Regions_Get",
        "description": "Returns the EntitySet Regions",
        "operationId": "Regions_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Region]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Regions" ],
        "summary": "Regions_Post",
        "description": "Post a new entity to EntitySet Regions",
        "operationId": "Regions_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Region",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Region" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Region" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Regions({RegionID})": {
      "get": {
        "tags": [ "Regions" ],
        "summary": "Regions_Get",
        "description": "Returns the entity with the key from Regions",
        "operationId": "Regions_GetByRegionid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "RegionID",
            "in": "path",
            "description": "key: RegionID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Region" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Regions" ],
        "summary": "Regions_Put",
        "description": "Replace entity in EntitySet Regions",
        "operationId": "Regions_PutByRegionid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "RegionID",
            "in": "path",
            "description": "key: RegionID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Region",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Region" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Regions" ],
        "summary": "Regions_Delete",
        "description": "Delete entity in EntitySet Regions",
        "operationId": "Regions_DeleteByRegionid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "RegionID",
            "in": "path",
            "description": "key: RegionID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Regions" ],
        "summary": "Regions_Patch",
        "description": "Update entity in EntitySet Regions",
        "operationId": "Regions_PatchByRegionid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "RegionID",
            "in": "path",
            "description": "key: RegionID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Region",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Region" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Shippers": {
      "get": {
        "tags": [ "Shippers" ],
        "summary": "Shippers_Get",
        "description": "Returns the EntitySet Shippers",
        "operationId": "Shippers_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Shipper]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Shippers" ],
        "summary": "Shippers_Post",
        "description": "Post a new entity to EntitySet Shippers",
        "operationId": "Shippers_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Shipper",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Shipper" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Shipper" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Shippers({ShipperID})": {
      "get": {
        "tags": [ "Shippers" ],
        "summary": "Shippers_Get",
        "description": "Returns the entity with the key from Shippers",
        "operationId": "Shippers_GetByShipperid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "ShipperID",
            "in": "path",
            "description": "key: ShipperID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Shipper" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Shippers" ],
        "summary": "Shippers_Put",
        "description": "Replace entity in EntitySet Shippers",
        "operationId": "Shippers_PutByShipperid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "ShipperID",
            "in": "path",
            "description": "key: ShipperID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Shipper",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Shipper" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Shippers" ],
        "summary": "Shippers_Delete",
        "description": "Delete entity in EntitySet Shippers",
        "operationId": "Shippers_DeleteByShipperid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "ShipperID",
            "in": "path",
            "description": "key: ShipperID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Shippers" ],
        "summary": "Shippers_Patch",
        "description": "Update entity in EntitySet Shippers",
        "operationId": "Shippers_PatchByShipperid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "ShipperID",
            "in": "path",
            "description": "key: ShipperID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Shipper",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Shipper" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Suppliers": {
      "get": {
        "tags": [ "Suppliers" ],
        "summary": "Suppliers_Get",
        "description": "Returns the EntitySet Suppliers",
        "operationId": "Suppliers_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Supplier]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Suppliers" ],
        "summary": "Suppliers_Post",
        "description": "Post a new entity to EntitySet Suppliers",
        "operationId": "Suppliers_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Supplier",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Suppliers({SupplierID})": {
      "get": {
        "tags": [ "Suppliers" ],
        "summary": "Suppliers_Get",
        "description": "Returns the entity with the key from Suppliers",
        "operationId": "Suppliers_GetBySupplierid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "SupplierID",
            "in": "path",
            "description": "key: SupplierID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Suppliers" ],
        "summary": "Suppliers_Put",
        "description": "Replace entity in EntitySet Suppliers",
        "operationId": "Suppliers_PutBySupplierid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "SupplierID",
            "in": "path",
            "description": "key: SupplierID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Supplier",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Suppliers" ],
        "summary": "Suppliers_Delete",
        "description": "Delete entity in EntitySet Suppliers",
        "operationId": "Suppliers_DeleteBySupplierid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "SupplierID",
            "in": "path",
            "description": "key: SupplierID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Suppliers" ],
        "summary": "Suppliers_Patch",
        "description": "Update entity in EntitySet Suppliers",
        "operationId": "Suppliers_PatchBySupplierid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "SupplierID",
            "in": "path",
            "description": "key: SupplierID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Supplier",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Supplier" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    },
    "/Northwind/v4/Territories": {
      "get": {
        "tags": [ "Territories" ],
        "summary": "Territories_Get",
        "description": "Returns the EntitySet Territories",
        "operationId": "Territories_Get",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expands related entities inline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filters the results, based on a Boolean condition.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Sorts the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Returns only the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the first n results.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$count",
            "in": "query",
            "description": "Includes a count of the matching results in the response.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ODataResponse[Territory]" }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [ "Territories" ],
        "summary": "Territories_Post",
        "description": "Post a new entity to EntitySet Territories",
        "operationId": "Territories_Post",
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "Territory",
            "in": "body",
            "description": "The entity to post",
            "required": true,
            "schema": { "$ref": "#/definitions/Territory" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Territory" }
          }
        },
        "deprecated": false
      }
    },
    "/Northwind/v4/Territories('{TerritoryID}')": {
      "get": {
        "tags": [ "Territories" ],
        "summary": "Territories_Get",
        "description": "Returns the entity with the key from Territories",
        "operationId": "Territories_GetByTerritoryid",
        "consumes": [ ],
        "produces": [ "application/json" ],
        "parameters": [
          {
            "name": "TerritoryID",
            "in": "path",
            "description": "key: TerritoryID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Selects which properties to include in the response.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Territory" }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [ "Territories" ],
        "summary": "Territories_Put",
        "description": "Replace entity in EntitySet Territories",
        "operationId": "Territories_PutByTerritoryid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "TerritoryID",
            "in": "path",
            "description": "key: TerritoryID",
            "required": true,
            "type": "string"
          },
          {
            "name": "Territory",
            "in": "body",
            "description": "The entity to put",
            "required": true,
            "schema": { "$ref": "#/definitions/Territory" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "delete": {
        "tags": [ "Territories" ],
        "summary": "Territories_Delete",
        "description": "Delete entity in EntitySet Territories",
        "operationId": "Territories_DeleteByTerritoryid",
        "consumes": [ ],
        "produces": [ ],
        "parameters": [
          {
            "name": "TerritoryID",
            "in": "path",
            "description": "key: TerritoryID",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "If-Match header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      },
      "patch": {
        "tags": [ "Territories" ],
        "summary": "Territories_Patch",
        "description": "Update entity in EntitySet Territories",
        "operationId": "Territories_PatchByTerritoryid",
        "consumes": [ "application/json" ],
        "produces": [ ],
        "parameters": [
          {
            "name": "TerritoryID",
            "in": "path",
            "description": "key: TerritoryID",
            "required": true,
            "type": "string"
          },
          {
            "name": "Territory",
            "in": "body",
            "description": "The entity to patch",
            "required": true,
            "schema": { "$ref": "#/definitions/Territory" }
          }
        ],
        "responses": { "204": { "description": "No Content" } },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ODataResponse[Category]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Category" }
        }
      }
    },
    "Category": {
      "required": [ "CategoryName" ],
      "type": "object",
      "properties": {
        "CategoryID": {
          "format": "int32",
          "type": "integer"
        },
        "CategoryName": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Description": { "type": "string" },
        "Picture": { "type": "string" }
      }
    },
    "Product": {
      "required": [ "ProductName" ],
      "type": "object",
      "properties": {
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "ProductName": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "SupplierID": {
          "format": "int32",
          "type": "integer"
        },
        "CategoryID": {
          "format": "int32",
          "type": "integer"
        },
        "QuantityPerUnit": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number"
        },
        "UnitsInStock": {
          "format": "int32",
          "type": "integer"
        },
        "UnitsOnOrder": {
          "format": "int32",
          "type": "integer"
        },
        "ReorderLevel": {
          "format": "int32",
          "type": "integer"
        },
        "Discontinued": { "type": "boolean" }
      }
    },
    "Order_Detail": {
      "type": "object",
      "properties": {
        "OrderID": {
          "format": "int32",
          "type": "integer"
        },
        "ProductID": {
          "format": "int32",
          "type": "integer"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Discount": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Supplier": {
      "required": [ "CompanyName" ],
      "type": "object",
      "properties": {
        "SupplierID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyName": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ContactName": {
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "ContactTitle": {
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "Address": {
          "maxLength": 60,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Region": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Country": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "maxLength": 24,
          "minLength": 0,
          "type": "string"
        },
        "Fax": {
          "maxLength": 24,
          "minLength": 0,
          "type": "string"
        },
        "HomePage": { "type": "string" }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "OrderID": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerID": {
          "maxLength": 5,
          "minLength": 0,
          "type": "string"
        },
        "EmployeeID": {
          "format": "int32",
          "type": "integer"
        },
        "OrderDate": {
          "format": "date-time",
          "type": "string"
        },
        "RequiredDate": {
          "format": "date-time",
          "type": "string"
        },
        "ShippedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ShipVia": {
          "format": "int32",
          "type": "integer"
        },
        "Freight": {
          "format": "double",
          "type": "number"
        },
        "ShipName": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ShipAddress": {
          "maxLength": 60,
          "minLength": 0,
          "type": "string"
        },
        "ShipCity": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "ShipRegion": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "ShipPostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "ShipCountry": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Customer": {
      "required": [ "CompanyName" ],
      "type": "object",
      "properties": {
        "CustomerID": {
          "maxLength": 5,
          "minLength": 0,
          "type": "string"
        },
        "CompanyName": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ContactName": {
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "ContactTitle": {
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "Address": {
          "maxLength": 60,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Region": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Country": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "maxLength": 24,
          "minLength": 0,
          "type": "string"
        },
        "Fax": {
          "maxLength": 24,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Employee": {
      "required": [ "LastName", "FirstName" ],
      "type": "object",
      "properties": {
        "EmployeeID": {
          "format": "int32",
          "type": "integer"
        },
        "LastName": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "FirstName": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Title": {
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "TitleOfCourtesy": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "BirthDate": {
          "format": "date-time",
          "type": "string"
        },
        "HireDate": {
          "format": "date-time",
          "type": "string"
        },
        "Address": {
          "maxLength": 60,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "Region": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Country": {
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "HomePhone": {
          "maxLength": 24,
          "minLength": 0,
          "type": "string"
        },
        "Extension": {
          "maxLength": 4,
          "minLength": 0,
          "type": "string"
        },
        "Photo": { "type": "string" },
        "Notes": { "type": "string" },
        "ReportsTo": {
          "format": "int32",
          "type": "integer"
        },
        "PhotoPath": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "Shipper": {
      "required": [ "CompanyName" ],
      "type": "object",
      "properties": {
        "ShipperID": {
          "format": "int32",
          "type": "integer"
        },
        "CompanyName": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "maxLength": 24,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "CustomerDemographic": {
      "type": "object",
      "properties": {
        "CustomerTypeID": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "CustomerDesc": { "type": "string" }
      }
    },
    "Territory": {
      "required": [ "TerritoryDescription" ],
      "type": "object",
      "properties": {
        "TerritoryID": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "TerritoryDescription": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RegionID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Region": {
      "required": [ "RegionDescription" ],
      "type": "object",
      "properties": {
        "RegionID": {
          "format": "int32",
          "type": "integer"
        },
        "RegionDescription": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ODataResponse[CustomerDemographic]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/CustomerDemographic" }
        }
      }
    },
    "ODataResponse[Customer]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Customer" }
        }
      }
    },
    "ODataResponse[Employee]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Employee" }
        }
      }
    },
    "ODataResponse[Order_Detail]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Order_Detail" }
        }
      }
    },
    "ODataResponse[Order]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Order" }
        }
      }
    },
    "ODataResponse[Product]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Product" }
        }
      }
    },
    "ODataResponse[Region]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Region" }
        }
      }
    },
    "ODataResponse[Shipper]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Shipper" }
        }
      }
    },
    "ODataResponse[Supplier]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Supplier" }
        }
      }
    },
    "ODataResponse[Territory]": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Territory" }
        }
      }
    }
  },
  "parameters": { },
  "responses": { },
  "securityDefinitions": { },
  "security": [ ],
  "tags": [ ]
}